## We use this configuration to get a kubernetes build of WebApp on a testing environment.
# Step 1: build an angular application
FROM node:8.11 as node

RUN  apt-get update && \
 apt-get install -y zip

RUN npm i -g npm@latest
WORKDIR /app

COPY ./ /app/
RUN npm ci

# download translations
ARG CROWDIN_API_KEY
RUN curl https://api.crowdin.com/api/project/shoppingfeed-webapp/export?key=$CROWDIN_API_KEY
RUN curl https://api.crowdin.com/api/project/shoppingfeed-webapp/download/all.zip?key=$CROWDIN_API_KEY -o all.zip
RUN unzip -o all.zip

ARG env=prod
ARG LOCALES="en fr es pt de it"

# variables from environments/environment.ts

ARG DEFAULT_LANGUAGE
ARG APP_URL
ARG APP_AUTHORIZATION
ARG API_URL_WITHOUT_VERSION
ARG API_URL
ARG BASE_HREF='/v3'
ARG DEFAULT_AUTHORIZATION
ARG SHOPIFY_APP_URL
ARG SUPPORT_URL
ARG SUPPORT_AUTHORIZATION
ARG CONTACT_EMAIL
ARG SUPPORT_EMAIL
ARG DEFAULT_AUTOPILOT_EMAIL
ARG DEFAULT_AUTOPILOT_STORENAME
ARG RUN_AUTOPILOT

RUN npm run compile-env

RUN chmod +x ./build-multiple-locales.sh
RUN ./build-multiple-locales.sh

#Step 3: copy files of compiled webapp to the nginx served folder and serve files with nginx
FROM nginx:1.13

COPY --from=node /app/dist/ /usr/share/nginx/html

COPY ./nginx-custom.conf /etc/nginx/conf.d/default.conf
